[build-system]
requires = ["flit_core >=2,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.metadata]
module = "ninja"
dist-name = "django-ninja"
author = "Vitaliy Kucheryaviy"
author-email = "ppr.vitaly@gmail.com"
home-page = "https://django-ninja.dev"
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Development Status :: 5 - Production/Stable",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Framework :: Django",
    "Framework :: Django :: 3.1",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: AsyncIO",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP",
]

requires = ["Django >=3.1", "pydantic >=2.0,<3.0.0"]
description-file = "README.md"
requires-python = ">=3.7"


[tool.flit.metadata.urls]
Documentation = "https://django-ninja.dev"
Repository = "https://github.com/vitalik/django-ninja"


[tool.flit.metadata.requires-extra]
test = [
    "pytest",
    "pytest-cov",
    "pytest-django",
    "pytest-asyncio",
    "psycopg2-binary",
    "black",
    "mypy==1.7.1",
    "ruff==0.1.6",
    "django-stubs",
]
doc = ["mkdocs", "mkdocs-material", "markdown-include", "mkdocstrings"]
dev = ["pre-commit"]


[tool.ruff]
target-version = "py37"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "UP",   # pyupgrade
    "FURB", # refurb
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"ninja/compatibility/datastructures.py" = ["C416"]
"ninja/utils.py" = ["B004"]
"tests/*" = ["C408", "F401"]


[tool.coverage.run]
omit = ["ninja/compatibility/*"]
branch = true

[tool.coverage.report]
fail_under = 100
skip_covered = true
show_missing = true
